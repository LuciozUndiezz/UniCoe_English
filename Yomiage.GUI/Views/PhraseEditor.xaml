<UserControl
    x:Class="Yomiage.GUI.Views.PhraseEditor"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:conv="clr-namespace:Yomiage.GUI.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:graph="clr-namespace:Yomiage.GUI.Graph"
    xmlns:icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:local="clr-namespace:Yomiage.GUI.Views"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:rp="clr-namespace:Reactive.Bindings.Interactivity;assembly=ReactiveProperty.WPF"
    d:DesignHeight="450"
    d:DesignWidth="1000"
    Background="{DynamicResource MahApps.Brushes.ThemeBackground}"
    Focusable="True"
    MouseDown="UserControl_MouseDown"
    mc:Ignorable="d">
    <behaviors:Interaction.Triggers>
        <behaviors:EventTrigger EventName="KeyDown">
            <rp:EventToReactiveCommand Command="{Binding KeyDownCommand}" />
        </behaviors:EventTrigger>
    </behaviors:Interaction.Triggers>
    <UserControl.ContextMenu>
        <ContextMenu>
            <MenuItem
                Command="{Binding UndoCommand}"
                Header="戻る"
                InputGestureText="Ctrl+Z" />
            <MenuItem
                Command="{Binding RedoCommand}"
                Header="進む"
                InputGestureText="Ctrl+Y" />
            <Separator />
            <MenuItem Command="{Binding CopyEditorCommand}" Header="Copy Tab" />
            <MenuItem Click="MenuItem_Click" Header="Copy Image To Clipboard" />
            <!--<MenuItem Command="{Binding CopyCommand}" Header="Copy" />
            <MenuItem Command="{Binding PasteCommand}" Header="Paste" />-->
        </ContextMenu>
    </UserControl.ContextMenu>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="120" />
            <ColumnDefinition Width="auto" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="35" />
            <RowDefinition />
            <RowDefinition Height="35" />
        </Grid.RowDefinitions>
        <GridSplitter
            Grid.Row="1"
            Grid.RowSpan="3"
            Grid.Column="1"
            Width="4" />

        <!--  Speech Content  -->
        <DockPanel
            Grid.Row="0"
            Grid.Column="2"
            Margin="0,3,0,3">
            <ComboBox
                Width="85"
                Height="24"
                Margin="3,0,0,0"
                DockPanel.Dock="Right"
                ItemsSource="{Binding EndChars}"
                SelectedItem="{Binding SelectedEndChar.Value, Mode=TwoWay}" />
            <TextBox
                Height="24"
                FontSize="12"
                Text="{Binding OriginalText.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        </DockPanel>

        <!--  Buttons  -->
        <DockPanel Grid.Row="2" Grid.Column="2">
            <Button
                DockPanel.Dock="Right"
                IsEnabled="False"
                Style="{StaticResource IconButton}"
                Visibility="Collapsed">
                <DockPanel>
                    <icon:PackIconBoxIcons
                        Margin="0,0,4,0"
                        Kind="SolidShareAlt"
                        RotationAngle="90" />
                    <TextBlock VerticalAlignment="Bottom">Convert To Standard Language</TextBlock>
                </DockPanel>
            </Button>
            <StackPanel Orientation="Horizontal">
                <!--<Button Command="{Binding PlayCommand}" Style="{StaticResource IconButton}">
                    <DockPanel>
                        <icon:PackIconBoxIcons Margin="0,0,4,0" Kind="RegularPlayCircle" />
                        <TextBlock VerticalAlignment="Bottom">Play</TextBlock>
                    </DockPanel>
                </Button>-->
                <Grid>
                    <Button Command="{Binding PlayCommand}">
                        <Button.Style>
                            <Style BasedOn="{StaticResource IconButton}" TargetType="Button">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding VoicePlayerService.IsPlaying.Value}" Value="True">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <DockPanel>
                            <icon:PackIconBoxIcons Margin="0,0,4,0" Kind="RegularPlayCircle" />
                            <TextBlock VerticalAlignment="Bottom">Play</TextBlock>
                        </DockPanel>
                    </Button>
                    <Button
                        Command="{Binding PlayCommand}"
                        Style="{StaticResource IconButton}"
                        Visibility="{Binding VoicePlayerService.IsPlaying.Value, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="2,0,-16,0">
                        <DockPanel Width="69">
                            <icon:PackIconBoxIcons Margin="0,0,4,0" Kind="RegularPauseCircle" />
                            <TextBlock VerticalAlignment="Bottom">Pause</TextBlock>
                        </DockPanel>
                    </Button>
                </Grid>
                <Button Command="{Binding StopCommand}" Style="{StaticResource IconButton}" Width="67">
                    <DockPanel>
                        <icon:PackIconBoxIcons Margin="0,0,4,0" Kind="RegularStopCircle" />
                        <TextBlock VerticalAlignment="Bottom" Text="Stop"/>
                    </DockPanel>
                </Button>
                <Button
                    Command="{Binding RegisterCommand}"
                    Style="{StaticResource IconButton}" Width="60">
                    <DockPanel>
                        <icon:PackIconBoxIcons Margin="0,0,4,0" Kind="SolidSave" />
                        <TextBlock VerticalAlignment="Bottom" Text="Save"/>
                    </DockPanel>
                </Button>
                <Button
                    Margin="0,0,6,0"
                    Command="{Binding RegisterCharaCommand}"
                    Style="{StaticResource IconButton}">
                    <DockPanel>
                        <icon:PackIconBoxIcons Margin="0,0,4,0" Kind="SolidSave" />
                        <TextBlock VerticalAlignment="Bottom" Text="Save (Character)"/>
                    </DockPanel>
                </Button>
                <Button Command="{Binding UnRegisterCommand}" Style="{StaticResource IconButton}">
                    <DockPanel>
                        <icon:PackIconMaterial Margin="0,0,6,0" Kind="TrashCanOutline" />
                        <TextBlock VerticalAlignment="Bottom" Text="Delete"/>
                    </DockPanel>
                </Button>
                <Button
                    Command="{Binding OpenDialogCommand}"
                    CommandParameter="PhraseListDialog"
                    Style="{StaticResource IconButton}">
                    <DockPanel>
                        <icon:PackIconMaterial Margin="0,0,6,0" Kind="FormatListBulletedSquare" />
                        <TextBlock VerticalAlignment="Bottom" Text="Preview"/>
                    </DockPanel>
                </Button>
                <Button
                    Command="{Binding ClearCommand}"
                    Style="{StaticResource IconButton}">
                    <DockPanel>
                        <icon:PackIconBoxIcons Margin="0,0,4,0" Kind="RegularRefresh" />
                        <TextBlock VerticalAlignment="Bottom" Text="Clear"/>
                    </DockPanel>
                </Button>
                <Button Command="{Binding UndoCommand}" Style="{StaticResource IconButton}">
                    <DockPanel>
                        <icon:PackIconBoxIcons Margin="0,0,4,0" Kind="RegularUndo" />
                        <TextBlock VerticalAlignment="Bottom" Text="Undo"/>
                    </DockPanel>
                </Button>
                <Button Command="{Binding RedoCommand}" Style="{StaticResource IconButton}">
                    <DockPanel>
                        <icon:PackIconBoxIcons Margin="0,0,4,0" Kind="RegularRedo" />
                        <TextBlock VerticalAlignment="Bottom" Text="Redo"/>
                    </DockPanel>
                </Button>
                <Button
                    Command="{Binding SaveVoiceCommand}"
                    Style="{StaticResource IconButton}">
                    <DockPanel>
                        <icon:PackIconBoxIcons Margin="0,0,4,0" Kind="RegularDownload" />
                        <TextBlock VerticalAlignment="Bottom" Text="Save"/>
                    </DockPanel>
                </Button>
                <Button Click="Button_Click" Style="{StaticResource IconButton}">
                    <DockPanel>
                        <icon:PackIconBoxIcons Margin="0,0,4,0" Kind="RegularImageAlt" />
                        <TextBlock VerticalAlignment="Bottom" Text="Save (Image)"/>
                    </DockPanel>
                </Button>
            </StackPanel>
        </DockPanel>

        <!--  Left Tab  -->
        <ScrollViewer
            Grid.Row="1"
            Grid.RowSpan="2"
            HorizontalScrollBarVisibility="Hidden"
            VerticalScrollBarVisibility="Hidden">
            <StackPanel Margin="3,0,3,0">
                <DockPanel Visibility="{Binding AccentHide.Value, Converter={InverseBoolToVisibilityConverter}}">
                    <CheckBox
                        Name="AccentCheck"
                        mah:CheckBoxHelper.CheckGlyphForegroundChecked="{DynamicResource MahApps.Brushes.ThemeForeground}"
                        mah:CheckBoxHelper.CheckBackgroundStrokeUnchecked="Transparent"
                        mah:CheckBoxHelper.CheckBackgroundStrokeUncheckedMouseOver="{DynamicResource MahApps.Brushes.ThemeForeground}"
                        mah:CheckBoxHelper.CheckGlyphForegroundCheckedMouseOver="{DynamicResource MahApps.Brushes.ThemeForeground}"
                        mah:CheckBoxHelper.CheckGlyphForegroundCheckedPressed="{DynamicResource MahApps.Brushes.ThemeForeground}"
                        IsChecked="True" />
                    <Border BorderBrush="{DynamicResource MahApps.Brushes.ThemeForeground}"
                            Margin="0,0,0,2">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="BorderThickness" Value="1,0,0,0"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding AccentSelected.Value}" Value="True">
                                        <Setter Property="BorderThickness" Value="5,0,0,1"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Button
                        Height="35"
                        Margin="0,0,0,2"
                        Padding="5,0,0,0"
                        HorizontalContentAlignment="Left"
                        Command="{Binding SelectCommand}"
                        CommandParameter="Accent"
                        Style="{StaticResource IconButton}">
                            <DockPanel>
                                <icon:PackIconBoxIcons
                                Margin="0,0,4,0"
                                Kind="SolidShareAlt"
                                RotationAngle="90" />
                                <TextBlock VerticalAlignment="Bottom">Accent</TextBlock>
                            </DockPanel>
                        </Button>
                    </Border>
                </DockPanel>
                <DockPanel Visibility="{Binding VolumeSetting.Value.Hide, Converter={InverseBoolToVisibilityConverter}}">
                    <CheckBox
                        Name="VolumeCheck"
                        mah:CheckBoxHelper.CheckBackgroundStrokeChecked="{StaticResource AccentRed}"
                        mah:CheckBoxHelper.CheckBackgroundStrokeUnchecked="Transparent"
                        mah:CheckBoxHelper.CheckBackgroundStrokeUncheckedMouseOver="{StaticResource AccentRed}"
                        mah:CheckBoxHelper.CheckGlyphForegroundChecked="{StaticResource AccentRed}"
                        mah:CheckBoxHelper.CheckGlyphForegroundCheckedMouseOver="{StaticResource AccentRed}"
                        mah:CheckBoxHelper.CheckGlyphForegroundCheckedPressed="{StaticResource AccentRed}" />
                    <Border BorderBrush="{StaticResource AccentRed}"
                            Margin="0,0,0,2">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="BorderThickness" Value="1,0,0,0"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding VolumeSelected.Value}" Value="True">
                                        <Setter Property="BorderThickness" Value="5,0,0,1"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Button
                        Height="35"
                        Margin="0,0,0,2"
                        Padding="5,0,0,0"
                        HorizontalContentAlignment="Left"
                        Command="{Binding SelectCommand}"
                        CommandParameter="Volume"
                        Style="{StaticResource IconButton}"
                        ToolTip="{Binding VolumeSetting.Value.Description}">
                            <DockPanel HorizontalAlignment="Stretch">
                                <icon:PackIconBoxIcons Margin="0,0,4,0" Kind="SolidMegaphone" />
                                <TextBlock VerticalAlignment="Bottom" Text="{Binding VolumeSetting.Value.Name}" />
                            </DockPanel>
                        </Button>
                    </Border>
                </DockPanel>
                <DockPanel Visibility="{Binding SpeedSetting.Value.Hide, Converter={InverseBoolToVisibilityConverter}}">
                    <CheckBox
                        Name="SpeedCheck"
                        mah:CheckBoxHelper.CheckBackgroundStrokeChecked="{StaticResource AccentGreen}"
                        mah:CheckBoxHelper.CheckBackgroundStrokeUnchecked="Transparent"
                        mah:CheckBoxHelper.CheckBackgroundStrokeUncheckedMouseOver="{StaticResource AccentGreen}"
                        mah:CheckBoxHelper.CheckGlyphForegroundChecked="{StaticResource AccentGreen}"
                        mah:CheckBoxHelper.CheckGlyphForegroundCheckedMouseOver="{StaticResource AccentGreen}"
                        mah:CheckBoxHelper.CheckGlyphForegroundCheckedPressed="{StaticResource AccentGreen}" />
                    <Border BorderBrush="{StaticResource AccentGreen}"
                            Margin="0,0,0,2">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="BorderThickness" Value="1,0,0,0"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SpeedSelected.Value}" Value="True">
                                        <Setter Property="BorderThickness" Value="5,0,0,1"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Button
                        Height="35"
                        Margin="0,0,0,2"
                        Padding="5,0,0,0"
                        HorizontalContentAlignment="Left"
                        Command="{Binding SelectCommand}"
                        CommandParameter="Speed"
                        Style="{StaticResource IconButton}"
                        ToolTip="{Binding SpeedSetting.Value.Description}">
                            <DockPanel>
                                <icon:PackIconMaterial Margin="0,0,4,0" Kind="Speedometer" />
                                <TextBlock VerticalAlignment="Bottom" Text="{Binding SpeedSetting.Value.Name}" />
                            </DockPanel>
                        </Button>
                    </Border>
                </DockPanel>
                <DockPanel Visibility="{Binding PitchSetting.Value.Hide, Converter={InverseBoolToVisibilityConverter}}">
                    <CheckBox
                        Name="PitchCheck"
                        mah:CheckBoxHelper.CheckBackgroundStrokeChecked="{StaticResource AccentYellow}"
                        mah:CheckBoxHelper.CheckBackgroundStrokeUnchecked="Transparent"
                        mah:CheckBoxHelper.CheckBackgroundStrokeUncheckedMouseOver="{StaticResource AccentYellow}"
                        mah:CheckBoxHelper.CheckGlyphForegroundChecked="{StaticResource AccentYellow}"
                        mah:CheckBoxHelper.CheckGlyphForegroundCheckedMouseOver="{StaticResource AccentYellow}"
                        mah:CheckBoxHelper.CheckGlyphForegroundCheckedPressed="{StaticResource AccentYellow}" />
                    <Border BorderBrush="{StaticResource AccentYellow}"
                            Margin="0,0,0,2">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="BorderThickness" Value="1,0,0,0"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding PitchSelected.Value}" Value="True">
                                        <Setter Property="BorderThickness" Value="5,0,0,1"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Button
                        Height="35"
                        Margin="0,0,0,2"
                        Padding="5,0,0,0"
                        HorizontalContentAlignment="Left"
                        Command="{Binding SelectCommand}"
                        CommandParameter="Pitch"
                        Style="{StaticResource IconButton}"
                        ToolTip="{Binding PitchSetting.Value.Description}">
                            <DockPanel>
                                <icon:PackIconBoxIcons Margin="0,0,4,0" Kind="LogosYahoo" />
                                <TextBlock VerticalAlignment="Bottom" Text="{Binding PitchSetting.Value.Name}" />
                            </DockPanel>
                        </Button>
                    </Border>
                </DockPanel>
                <DockPanel Visibility="{Binding EmphasisSetting.Value.Hide, Converter={InverseBoolToVisibilityConverter}}">
                    <CheckBox
                        Name="EmphasisCheck"
                        mah:CheckBoxHelper.CheckBackgroundStrokeChecked="{StaticResource AccentPink}"
                        mah:CheckBoxHelper.CheckBackgroundStrokeUnchecked="Transparent"
                        mah:CheckBoxHelper.CheckBackgroundStrokeUncheckedMouseOver="{StaticResource AccentPink}"
                        mah:CheckBoxHelper.CheckGlyphForegroundChecked="{StaticResource AccentPink}"
                        mah:CheckBoxHelper.CheckGlyphForegroundCheckedMouseOver="{StaticResource AccentPink}"
                        mah:CheckBoxHelper.CheckGlyphForegroundCheckedPressed="{StaticResource AccentPink}" />
                    <Border BorderBrush="{StaticResource AccentPink}"
                            Margin="0,0,0,2">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="BorderThickness" Value="1,0,0,0"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding EmphasisSelected.Value}" Value="True">
                                        <Setter Property="BorderThickness" Value="5,0,0,1"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Button
                        Height="35"
                        Margin="0,0,0,2"
                        Padding="5,0,0,0"
                        HorizontalContentAlignment="Left"
                        Command="{Binding SelectCommand}"
                        CommandParameter="Emphasis"
                        Style="{StaticResource IconButton}"
                        ToolTip="{Binding EmphasisSetting.Value.Description}">
                            <DockPanel>
                                <icon:PackIconBoxIcons Margin="0,0,4,0" Kind="RegularPulse" />
                                <TextBlock VerticalAlignment="Bottom" Text="{Binding EmphasisSetting.Value.Name}" />
                            </DockPanel>
                        </Button>
                    </Border>
                </DockPanel>

                <ItemsControl ItemsSource="{Binding AdditionalSettings}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <DockPanel Visibility="{Binding Hide, Converter={InverseBoolToVisibilityConverter}}">
                                <CheckBox
                                    mah:CheckBoxHelper.CheckBackgroundStrokeChecked="{Binding Color}"
                                    mah:CheckBoxHelper.CheckBackgroundStrokeUnchecked="Transparent"
                                    mah:CheckBoxHelper.CheckBackgroundStrokeUncheckedMouseOver="{Binding Color}"
                                    mah:CheckBoxHelper.CheckGlyphForegroundChecked="{Binding Color}"
                                    mah:CheckBoxHelper.CheckGlyphForegroundCheckedMouseOver="{Binding Color}"
                                    mah:CheckBoxHelper.CheckGlyphForegroundCheckedPressed="{Binding Color}"
                                    IsChecked="{Binding IsVisible.Value}" />
                                <Border
                                    Margin="0,0,0,2"
                                    BorderBrush="{Binding Color}">
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Setter Property="BorderThickness" Value="1,0,0,0"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsSelected.Value}" Value="True">
                                                    <Setter Property="BorderThickness" Value="5,0,0,1"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <Button
                                    Height="35"
                                    Margin="0,0,0,2"
                                    Padding="5,0,0,0"
                                    HorizontalContentAlignment="Left"
                                    Command="{Binding SelectCommand}"
                                    CommandParameter="{Binding Key}"
                                    Style="{StaticResource IconButton}"
                                    ToolTip="{Binding Description}">
                                        <DockPanel>
                                            <icon:PackIconBoxIcons Margin="0,0,4,0" Kind="{Binding IconKind}" />
                                            <TextBlock VerticalAlignment="Bottom" Text="{Binding Name}" />
                                        </DockPanel>
                                    </Button>
                                </Border>
                            </DockPanel>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>


            </StackPanel>
        </ScrollViewer>

        <!--  Graph Edit  -->
        <ScrollViewer
            x:Name="scrollViewer"
            Grid.Row="1"
            Grid.Column="2"
            HorizontalScrollBarVisibility="Visible"
            VerticalScrollBarVisibility="Hidden">
            <Grid Background="{DynamicResource MahApps.Brushes.ThemeBackground}" MouseWheel="ScrollViewer_MouseWheel">
                <Grid
                    Height="15"
                    VerticalAlignment="Top"
                    Background="DimGray" />
                <graph:PhraseGraph
                    AccentSelected="{Binding AccentSelected.Value}"
                    AccentVisible="{Binding IsChecked, ElementName=AccentCheck}"
                    Additionals="{Binding AdditionalSettings}"
                    EmphasisSelected="{Binding EmphasisSelected.Value}"
                    EmphasisVisible="{Binding IsChecked, ElementName=EmphasisCheck}"
                    EngineConfig="{Binding EngineConfig.Value}"
                    IsExtend="{Binding IsExtend.Value}"
                    Phrase="{Binding Phrase.Value}"
                    PitchSelected="{Binding PitchSelected.Value}"
                    PitchVisible="{Binding IsChecked, ElementName=PitchCheck}"
                    PlayPosition="{Binding PlayPosition.Value}"
                    PrePlayPosition="{Binding PrePlayPosition.Value}"
                    SpeedSelected="{Binding SpeedSelected.Value}"
                    SpeedVisible="{Binding IsChecked, ElementName=SpeedCheck}"
                    UpdateCommand="{Binding UpdateCommand}"
                    VolumeSelected="{Binding VolumeSelected.Value}"
                    VolumeVisible="{Binding IsChecked, ElementName=VolumeCheck}" />
            </Grid>
        </ScrollViewer>

    </Grid>
</UserControl>
